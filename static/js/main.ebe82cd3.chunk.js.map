{"version":3,"sources":["utils/debounce.js","hooks/UseInfiniteScroll.js","hooks/useStickyState.js","components/Card.js","App.js","reportWebVitals.js","index.js","components/Card.module.css"],"names":["debounce","callback","timer","wait","args","clearTimeout","setTimeout","useInfiniteScroll","useState","isFetching","setIsFetching","handleScroll","scrollTop","document","documentElement","body","scrollHeight","window","innerHeight","useEffect","debounceHandleScroll","addEventListener","removeEventListener","useStickyState","defaultValue","key","stickyValue","localStorage","getItem","JSON","parse","value","setValue","setItem","stringify","imageUrl","API","Card","id","title","secret","server","ownername","setLikedItems","likedItems","isMetaShown","setIsMetaShown","imgSrc","isLiked","some","it","btnClasses","s","action","liked","className","card","onMouseEnter","onMouseLeave","media","style","backgroundImage","star","content","onClick","prev","filter","Set","url","params","qs","URLSearchParams","App","setPage","errorMessage","setErrorMessage","photosData","setPhotosData","noMore","setNoMore","page","loadingTextInit","loadingTextMore","loadingText","length","a","set","fetch","res","json","data","ok","stat","photos","photo","Error","message","console","log","fetchData","map","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ebe82cd3.chunk.js","sourcesContent":["const debounce = (callback, wait = 250) => {\n\tlet timer\n\treturn (...args) => {\n\t\tclearTimeout(timer)\n\t\ttimer = setTimeout(() => callback(...args), wait)\n\t}\n}\nexport default debounce\n\n/* \n// Testing it:\n\nvar d = debounce(() => console.log(\"CALLED\"), 1000);\n\nfor (let i = 0; i < 10; i++) {\n    // call every 100 ms (change to 1500 to see that debouncing will not happen)\n    let timeOut = 100 * i;\n\n    const cb = () => {\n        const date = new Date();\n        console.log(`calling at ${date.getSeconds()}.${date.getMilliseconds()}`);\n        d()\n    }\n    \n    setTimeout(cb, timeOut)\n}\n\n*/\n","import { useState, useEffect } from 'react'\nimport debounce from '../utils/debounce'\n\nconst useInfiniteScroll = (callback) => {\n\tconst [isFetching, setIsFetching] = useState(false)\n\n\tuseEffect(() => {\n\t\tconst debounceHandleScroll = debounce(handleScroll, 1500)\n\t\twindow?.addEventListener('scroll', debounceHandleScroll)\n\t\treturn () => {\n\t\t\twindow?.removeEventListener('scroll', debounceHandleScroll)\n\t\t}\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (!isFetching) return\n\t\tcallback()\n\t}, [callback, isFetching])\n\n\tfunction handleScroll() {\n\t\tconst scrollTop =\n\t\t\t(document?.documentElement && document?.documentElement.scrollTop) ||\n\t\t\tdocument?.body.scrollTop\n\t\tconst scrollHeight =\n\t\t\t(document?.documentElement && document?.documentElement.scrollHeight) ||\n\t\t\tdocument.body.scrollHeight\n\t\tif (scrollTop + window?.innerHeight + 50 >= scrollHeight) {\n\t\t\tsetIsFetching(true)\n\t\t}\n\t}\n\n\treturn [isFetching, setIsFetching]\n}\n\nexport default useInfiniteScroll\n","import { useState, useEffect } from 'react'\n\nfunction useStickyState(defaultValue, key) {\n\tconst stickyValue = window.localStorage.getItem(key)\n\tconst [value, setValue] = useState(() =>\n\t\tstickyValue === null ? defaultValue : JSON.parse(stickyValue)\n\t)\n\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem(key, JSON.stringify(value))\n\t}, [key, value])\n\n\treturn [value, setValue]\n}\n\nexport default useStickyState\n","import React, { useState } from 'react'\nimport s from './Card.module.css'\nimport API from '../configData.json'\nconst { imageUrl } = API\n\nfunction Card({\n\tid,\n\ttitle,\n\tsecret,\n\tserver,\n\townername,\n\tsetLikedItems,\n\tlikedItems,\n}) {\n\tconst [isMetaShown, setIsMetaShown] = useState(false)\n\tconst imgSrc = `${imageUrl}${server}/${id}_${secret}.jpg`\n\tconst isLiked = likedItems.some((it) => it === id)\n\tconst btnClasses = isLiked ? `${s.action} ${s.liked}` : s.action\n\n\tfunction handleLike() {\n\t\tsetLikedItems((prev) => {\n\t\t\treturn isLiked\n\t\t\t\t? prev.filter((it) => it !== id)\n\t\t\t\t: [...new Set([...prev, id])] //To ensure no duplicate entries (by id)\n\t\t})\n\t}\n\n\treturn (\n\t\t<li\n\t\t\tclassName={s.card}\n\t\t\tonMouseEnter={() => setIsMetaShown(true)}\n\t\t\tonMouseLeave={() => setIsMetaShown(false)}\n\t\t>\n\t\t\t<div className={s.media} style={{ backgroundImage: `url(${imgSrc})` }} />\n\t\t\t{isLiked && (\n\t\t\t\t<div className={s.star}>\n\t\t\t\t\t<i>&#10084;</i>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{isMetaShown && (\n\t\t\t\t<section className={s.content}>\n\t\t\t\t\t<strong title={title}>{title}</strong>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<em>{ownername}</em>\n\t\t\t\t\t<button className={btnClasses} onClick={handleLike}>\n\t\t\t\t\t\t{isLiked ? `Dislike` : `Like`}\n\t\t\t\t\t</button>\n\t\t\t\t</section>\n\t\t\t)}\n\t\t</li>\n\t)\n}\nexport default Card\n","import React, { useState, useEffect } from 'react'\nimport API from './configData.json'\nimport './styles/global.css'\nimport './App.css'\nimport useInfiniteScroll from './hooks/UseInfiniteScroll'\nimport useStickyState from './hooks/useStickyState'\nimport Card from './components/Card'\n\nconst { url, params } = API\nconst qs = new URLSearchParams(params)\n\nfunction App() {\n\tconst [isFetching, setIsFetching] = useInfiniteScroll(fetchMore)\n\tconst [likedItems, setLikedItems] = useStickyState([], 'likedPhotos')\n\tconst [errorMessage, setErrorMessage] = useState('')\n\tconst [photosData, setPhotosData] = useState([])\n\tconst [noMore, setNoMore] = useState(false)\n\tconst [page, setPage] = useState(1)\n\n\tconst loadingTextInit = errorMessage\n\t\t? 'Problem fetching photos :('\n\t\t: 'Fetching photos ...'\n\n\tconst loadingTextMore = noMore\n\t\t? 'No more photos!'\n\t\t: 'Fetching more photos ...'\n\n\tconst loadingText =\n\t\tphotosData.length === 0 ? loadingTextInit : loadingTextMore\n\n\tfunction fetchMore() {\n\t\tsetPage((prev) => prev + 1)\n\t\tsetIsFetching(false)\n\t}\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tqs.set('page', page)\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(`${url}${qs}`)\n\t\t\t\tconst data = await res.json()\n\t\t\t\tif (res.ok && data.stat === 'ok') {\n\t\t\t\t\tsetPhotosData((prev) => [...prev, ...data.photos.photo])\n\t\t\t\t\tsetNoMore(data.photos.photo.length === 0)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tthrow new Error(data.message)\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error)\n\t\t\t\tsetErrorMessage(error.message)\n\t\t\t}\n\t\t}\n\t\tfetchData()\n\t}, [page])\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t{!!errorMessage && <div className='alert-error'>{errorMessage}</div>}\n\t\t\t{!!photosData && (\n\t\t\t\t<ul>\n\t\t\t\t\t{photosData.map((data, i) => (\n\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\tkey={`${i}-${data?.id}`}\n\t\t\t\t\t\t\t{...{ likedItems, setLikedItems, ...data }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t)}\n\t\t\t{!isFetching && <div className='loader'>{loadingText}</div>}\n\t\t</div>\n\t)\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3F8np\",\"shared\":\"Card_shared__1pvgm\",\"media\":\"Card_media__qot8H Card_shared__1pvgm\",\"content\":\"Card_content__2u8qS Card_shared__1pvgm\",\"action\":\"Card_action__2eExR\",\"liked\":\"Card_liked__2IB1k\",\"star\":\"Card_star__3wVSe\"};"],"sourceRoot":""}